// Generated by Selenium IDE
using System;
using System.Collections.Generic;
using OpenQA.Selenium;
using OpenQA.Selenium.Firefox;
using NUnit.Framework;

namespace GastroCafe_NUnit
{

    [TestFixture]
    public class ModuloCostosTest
    {
        private const string nombre_dominio = "localhost:63408";
        private IWebDriver driver;
        public IDictionary<string, object> vars { get; private set; }
        private IJavaScriptExecutor js;
        [SetUp]
        public void SetUp()
        {
            driver = new FirefoxDriver(Environment.CurrentDirectory);
            js = (IJavaScriptExecutor)driver;
            vars = new Dictionary<string, object>();
        }
        [TearDown]
        protected void TearDown()
        {
            driver.Quit();
        }

        public void IniciarSesion()
        {
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Account/Login");
            driver.FindElement(By.Id("Email")).SendKeys("gastrocafe@gmail.com");
            driver.FindElement(By.Id("Password")).SendKeys("gastroCafe_123");
            driver.FindElement(By.CssSelector(".btn")).Click();
        }
        [Test]
        public void CP_RegistrarCostoFijo()
        {
            IniciarSesion();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Costo/Create");
            driver.FindElement(By.Id("Nombre")).SendKeys("Luz");
            driver.FindElement(By.Id("Monto")).SendKeys("2000");
            driver.FindElement(By.Id("FechaRegistro")).SendKeys("2020-08-21");
            {
                var dropdown = driver.FindElement(By.Id("Periodicidad"));
                dropdown.FindElement(By.XPath("//option[. = 'Mensual']")).Click();
            }
            driver.FindElement(By.Id("Descripcion")).SendKeys("Pago de luz");
            driver.FindElement(By.Id("btnRegistrarCosto")).Click();
            var elements = driver.FindElements(By.XPath("//td[contains(.,\'Luz\')]"));
            Assert.True(elements.Count > 0);
        }
        [Test]
        public void CP_RegistrarCostoFijoConCamposVacios()
        {
            IniciarSesion();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Costo/Create");
            driver.FindElement(By.Id("btnRegistrarCosto")).Click();
            Assert.That(driver.FindElement(By.Id("Nombre-error")).Text, Is.EqualTo("El campo de Nombre es requerido."));
            Assert.That(driver.FindElement(By.Id("Monto-error")).Text, Is.EqualTo("El campo de Monto es requerido."));
            Assert.That(driver.FindElement(By.Id("FechaRegistro-error")).Text, Is.EqualTo("El campo de Fecha de registro es requerido."));
            Assert.That(driver.FindElement(By.Id("Descripcion-error")).Text, Is.EqualTo("El campo de Descripción es requerido."));
        }
        [Test]
        public void CP_RegistrarCostoFijoConNumerosNegativos()
        {
            IniciarSesion();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Costo/Create");
            driver.FindElement(By.Id("Nombre")).SendKeys("Luz");
            driver.FindElement(By.Id("Monto")).SendKeys("-2000");
            driver.FindElement(By.Id("FechaRegistro")).SendKeys("2020-08-21");
            {
                var dropdown = driver.FindElement(By.Id("Periodicidad"));
                dropdown.FindElement(By.XPath("//option[. = 'Mensual']")).Click();
            }
            driver.FindElement(By.Id("Descripcion")).SendKeys("Pago de luz");
            driver.FindElement(By.Id("btnRegistrarCosto")).Click();
            Assert.That(driver.FindElement(By.Id("Monto-error")).Text, Is.EqualTo("Ingresa un valor mayor a 0"));
        }
        [Test]
        public void CP_RegistrarCostoFijoConNumerosGrandes()
        {
            IniciarSesion();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Costo/Create");
            driver.FindElement(By.Id("Nombre")).SendKeys("Luz");
            driver.FindElement(By.Id("Monto")).Clear();
            driver.FindElement(By.Id("Monto")).SendKeys("20000000000000");
            driver.FindElement(By.Id("FechaRegistro")).SendKeys("2020-08-21");
            {
                var dropdown = driver.FindElement(By.Id("Periodicidad"));
                dropdown.FindElement(By.XPath("//option[. = 'Mensual']")).Click();
            }
            driver.FindElement(By.Id("Descripcion")).SendKeys("Pago de luz");
            driver.FindElement(By.Id("btnRegistrarCosto")).Click();
            Assert.That(driver.FindElement(By.Id("Monto-error")).Text, Is.EqualTo("El valor debe ser mayor a 0 y menor a 2147483640"));
        }
        [Test]
        public void CP_RegistrarCostoFijoConCero()
        {
            IniciarSesion();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Costo/Create");
            driver.FindElement(By.Id("Nombre")).SendKeys("Agua");
            driver.FindElement(By.Id("Monto")).SendKeys("0");
            driver.FindElement(By.Id("FechaRegistro")).SendKeys("2020-08-21");
            {
                var dropdown = driver.FindElement(By.Id("Periodicidad"));
                dropdown.FindElement(By.XPath("//option[. = 'Mensual']")).Click();
            }
            driver.FindElement(By.Id("Descripcion")).SendKeys("Pago de agua");
            driver.FindElement(By.Id("btnRegistrarCosto")).Click();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Costo");
            {
                var elements = driver.FindElements(By.XPath("//td[contains(.,\'Agua\')]"));
                Assert.True(elements.Count == 0);
            }
        }
        [Test]
        public void CP_RegistrarCostoFijoConFechasPasadas()
        {
            IniciarSesion();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Costo/Create");
            driver.FindElement(By.Id("Nombre")).SendKeys("Renta");
            driver.FindElement(By.Id("Monto")).SendKeys("4000");
            driver.FindElement(By.Id("FechaRegistro")).SendKeys("1920-06-10");
            {
                var dropdown = driver.FindElement(By.Id("Periodicidad"));
                dropdown.FindElement(By.XPath("//option[. = 'Mensual']")).Click();
            }
            driver.FindElement(By.Id("Descripcion")).SendKeys("Pago de renta");
            driver.FindElement(By.Id("btnRegistrarCosto")).Click();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Costo");
            {
                var elements = driver.FindElements(By.XPath("//td[contains(.,\'Renta\')]"));
                Assert.True(elements.Count > 0);
            }
        }
        [Test]
        public void CP_RegistrarCostoOtro()
        {
            IniciarSesion();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Costo/CreateOtro");
            driver.FindElement(By.Id("Nombre")).SendKeys("Pago de multa");
            driver.FindElement(By.Id("Monto")).SendKeys("2000");
            driver.FindElement(By.Id("FechaRegistro")).SendKeys("2020-08-14");
            driver.FindElement(By.Id("Descripcion")).SendKeys("Se pago multa por cuarentena");
            driver.FindElement(By.Id("btnRegistrarCosto")).Click();
            var elements = driver.FindElements(By.XPath("//td[contains(.,\'Pago de multa\')]"));
            Assert.True(elements.Count > 0);
        }
        [Test]
        public void CP_EditarCostoFijo()
        {
            IniciarSesion();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Costo");
            driver.FindElement(By.LinkText("Editar")).Click();
            driver.FindElement(By.Id("Nombre")).Clear();
            driver.FindElement(By.Id("Nombre")).SendKeys("Luz modificada");
            driver.FindElement(By.Id("Monto")).Clear();
            driver.FindElement(By.Id("Monto")).SendKeys("5000");
            driver.FindElement(By.Id("FechaRegistro")).Clear();
            driver.FindElement(By.Id("FechaRegistro")).SendKeys("2020-12-01");
            {
                var dropdown = driver.FindElement(By.Id("Periodicidad"));
                dropdown.FindElement(By.XPath("//option[. = 'Mensual']")).Click();
            }
            driver.FindElement(By.Id("Descripcion")).Clear();
            driver.FindElement(By.Id("Descripcion")).SendKeys("Pago de luz modificada");
            driver.FindElement(By.Id("btnRegistrarCosto")).Click();
            var elements = driver.FindElements(By.XPath("//td[contains(.,\'Luz modificada\')]"));
            Assert.True(elements.Count > 0);
        }
        [Test]
        public void CP_RegistrarOtroCostoConCamposVacios()
        {
            IniciarSesion();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Costo/CreateOtro");
            driver.FindElement(By.Id("btnRegistrarCosto")).Click();
            Assert.That(driver.FindElement(By.Id("Nombre-error")).Text, Is.EqualTo("El campo de Nombre es requerido."));
            Assert.That(driver.FindElement(By.Id("Monto-error")).Text, Is.EqualTo("El campo de Monto es requerido."));
            Assert.That(driver.FindElement(By.Id("FechaRegistro-error")).Text, Is.EqualTo("El campo de Fecha de registro es requerido."));
            Assert.That(driver.FindElement(By.Id("Descripcion-error")).Text, Is.EqualTo("El campo de Descripción es requerido."));
        }
        [Test]
        public void CP_RegistrarOtroCostoConNumerosNegativos()
        {
            IniciarSesion();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Costo/CreateOtro");
            driver.FindElement(By.Id("Nombre")).SendKeys("Pago de multa");
            driver.FindElement(By.Id("Monto")).SendKeys("-2000");
            driver.FindElement(By.Id("FechaRegistro")).SendKeys("2020-08-14");
            driver.FindElement(By.Id("Descripcion")).SendKeys("Se pago multa por cuarentena");
            driver.FindElement(By.Id("btnRegistrarCosto")).Click();
            Assert.That(driver.FindElement(By.Id("Monto-error")).Text, Is.EqualTo("Ingresa un valor mayor a 0"));
        }
        [Test]
        public void CP_RegistrarOtroCostoConNumerosGrandes()
        {
            IniciarSesion();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Costo/CreateOtro");
            driver.FindElement(By.Id("Nombre")).SendKeys("Pago de multa");
            driver.FindElement(By.Id("Monto")).SendKeys("20000000000000");
            driver.FindElement(By.Id("FechaRegistro")).SendKeys("2020-08-14");
            driver.FindElement(By.Id("Descripcion")).SendKeys("Se pago multa por cuarentena");
            driver.FindElement(By.Id("btnRegistrarCosto")).Click();
            Assert.That(driver.FindElement(By.Id("Monto-error")).Text, Is.EqualTo("El valor debe ser mayor a 0 y menor a 2147483640"));
        }
        [Test]
        public void CP_RegistrarOtroCostoConCero()
        {
            IniciarSesion();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Costo/CreateOtro");
            driver.FindElement(By.Id("Nombre")).SendKeys("Sueldo2");
            driver.FindElement(By.Id("Monto")).SendKeys("0");
            driver.FindElement(By.Id("FechaRegistro")).SendKeys("2020-08-07");
            driver.FindElement(By.Id("Descripcion")).SendKeys("Pago de mesero 2");
            driver.FindElement(By.Id("btnRegistrarCosto")).Click();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Costo/IndexOtro");
            {
                var elements = driver.FindElements(By.XPath("//td[contains(.,\'Sueldo2\')]"));
                Assert.True(elements.Count == 0);
            }
        }
        [Test]
        public void CP_RegistrarOtroCostoConFechasPasadas()
        {
            IniciarSesion();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Costo/CreateOtro");
            driver.FindElement(By.Id("Nombre")).SendKeys("Sueldo");
            driver.FindElement(By.Id("Monto")).SendKeys("2000");
            driver.FindElement(By.Id("FechaRegistro")).SendKeys("1920-08-07");
            driver.FindElement(By.Id("Descripcion")).SendKeys("Pago de mesero");
            driver.FindElement(By.Id("btnRegistrarCosto")).Click();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Costo/IndexOtro");
            {
                var elements = driver.FindElements(By.XPath("//td[contains(.,\'Sueldo\')]"));
                Assert.True(elements.Count > 0);
            }
        }
        [Test]
        public void CP_EditarCostoOtro()
        {
            IniciarSesion();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Costo/IndexOtro");
            driver.FindElement(By.LinkText("Editar")).Click();
            driver.FindElement(By.Id("Nombre")).Clear();
            driver.FindElement(By.Id("Nombre")).SendKeys("Pago de multa modificado");
            driver.FindElement(By.Id("Monto")).Clear();
            driver.FindElement(By.Id("Monto")).SendKeys("5000");
            driver.FindElement(By.Id("FechaRegistro")).Clear();
            driver.FindElement(By.Id("FechaRegistro")).SendKeys("2020-12-01");
            driver.FindElement(By.Id("Descripcion")).Clear();
            driver.FindElement(By.Id("Descripcion")).SendKeys("Se pago multa por cuarentena modificado");
            driver.FindElement(By.Id("btnRegistrarCosto")).Click();
            var elements = driver.FindElements(By.XPath("//td[contains(.,\'Pago de multa modificado\')]"));
            Assert.True(elements.Count > 0);
        }
        [Test]
        public void CP_RegistrarCostoVariable()
        {
            IniciarSesion();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Recetas/IndexVariables");
            driver.FindElement(By.LinkText("Registrar venta")).Click();
            driver.FindElement(By.Id("RecetasVendidas")).SendKeys("29");
            driver.FindElement(By.XPath("//input[@value=\'Registrar\']")).Click();
            Assert.That(driver.FindElement(By.Id("tdMezclaProducto")).Text, Is.EqualTo("68"));
        }
        [Test]
        public void CP_RegistrarCostoVariableCampoVacio()
        {
            IniciarSesion();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Recetas/IndexVariables");
            driver.FindElement(By.LinkText("Registrar venta")).Click();
            driver.FindElement(By.XPath("//input[@value=\'Registrar\']")).Click();
            Assert.That(driver.FindElement(By.Id("RecetasVendidas-error")).Text, Is.EqualTo("El campo es requerido."));
        }
        [Test]
        public void CP_RegistrarCostoVariableConCero()
        {
            IniciarSesion();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Recetas/IndexVariables");
            driver.FindElement(By.LinkText("Registrar venta")).Click();
            driver.FindElement(By.Id("RecetasVendidas")).SendKeys("0");
            driver.FindElement(By.XPath("//input[@value=\'Registrar\']")).Click();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Recetas/IndexVariables");
            Assert.That(driver.FindElement(By.Id("tdMezclaProducto")).Text, Is.Not.EqualTo("0"));
        }
        [Test]
        public void CP_RegistrarCostoVariableConNumerosNegativos()
        {
            IniciarSesion();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Recetas/IndexVariables");
            driver.FindElement(By.LinkText("Registrar venta")).Click();
            driver.FindElement(By.Id("RecetasVendidas")).SendKeys("-2");
            driver.FindElement(By.XPath("//input[@value=\'Registrar\']")).Click();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Recetas/IndexVariables");
            Assert.That(driver.FindElement(By.Id("tdMezclaProducto")).Text, Is.Not.EqualTo("-2"));
        }
        [Test]
        public void CP_RegistrarCostoVariableConNumerosGrandes()
        {
            IniciarSesion();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Recetas/IndexVariables");
            driver.FindElement(By.LinkText("Registrar venta")).Click();
            driver.FindElement(By.Id("RecetasVendidas")).SendKeys("20000000000");
            driver.FindElement(By.XPath("//input[@value=\'Registrar\']")).Click();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Recetas/IndexVariables");
            Assert.That(driver.FindElement(By.Id("tdMezclaProducto")).Text, Is.Not.EqualTo("20000000000"));
        }
        [Test]
        public void CP_DeshabilitarCostoFijo()
        {
            IniciarSesion();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Costo");
            driver.FindElement(By.LinkText("Deshabilitar")).Click();
            driver.FindElement(By.XPath("//input[@value=\'Deshabilitar\']")).Click();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Costo");
            var elements = driver.FindElements(By.LinkText("Habilitar"));
            Assert.True(elements.Count > 0);
        }
        [Test]
        public void CP_DeshabilitarOtroCosto()
        {
            IniciarSesion();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Costo/IndexOtro");
            driver.FindElement(By.LinkText("Deshabilitar")).Click();
            driver.FindElement(By.XPath("//input[@value=\'Deshabilitar\']")).Click();
            driver.Navigate().GoToUrl("http://" + nombre_dominio + "/Costo");
            var elements = driver.FindElements(By.LinkText("Habilitar"));
            Assert.True(elements.Count > 0);
        }
    }
}